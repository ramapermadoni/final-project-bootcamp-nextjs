import { useContext, useState } from "react";
import { UserContext } from "@/context/userContext";
import { Box, Avatar, Heading, Text, Stack, Button, Flex, useToast } from "@chakra-ui/react";
import Cookies from "js-cookie";
import { useRouter } from "next/router";
import Layout from "@/layout";
import { useMutation } from "@/hooks/useMutation";

export default function Profile() {
    const user = useContext(UserContext); // Mengambil data user dari context
    const router = useRouter();
    const toast = useToast();
    const { mutate } = useMutation();
    const [isLoggingOut, setIsLoggingOut] = useState(false);

    const HandleLogout = async () => {
        setIsLoggingOut(true);
        // console.log("Logout");
        try {
            const response = await mutate({ url: "/api/logout", method: "POST", headers: { Authorization: `Bearer ${Cookies.get("user_token")}` } });
            // console.log("response => ", response);
            if (!response?.success) {
                // console.log("Logout failed");
                toast({
                    title: "Logout Gagal.",
                    description: "Proses logout gagal.",
                    status: "error",
                    duration: 2000,
                    isClosable: true,
                    position: "top",
                });
            }else{
                Cookies.remove("user_token");
                toast({
                    title: "Logout Berhasil.",
                    description: "Anda telah keluar dari akun.",
                    status: "success",
                    duration: 2000,
                    isClosable: true,
                    position: "top",
                });
                router.push("/login");
            }
        } catch (error) {
            toast({
                title: "Logout Gagal.",
                description: "Proses logout gagal.",
                status: "error",
                duration: 2000,
                isClosable: true,
                position: "top",
            });
        } finally {
            setIsLoggingOut(false);
        }
    };


    if (!user) {
        return (
            <Layout metaTitle="Profile" metaDescription="Generated by create next app">
                <Flex justifyContent="center" alignItems="center" h="100vh">
                    <Text fontSize="xl" color="gray.500">
                        Memuat data pengguna...
                    </Text>
                </Flex>
            </Layout>
        );
    }

    return (
        <Layout metaTitle="Profile" metaDescription="Generated by create next app">
        <Box
            maxW="480px"
            mx="auto"
            mt={10}
            p={6}
            borderRadius="md"
            bg="white"
        >
            {/* Avatar dan Nama */}
            <Flex justifyContent="center" mb={6}>
                <Avatar size="xl" name={user.name} />
            </Flex>
            <Heading as="h2" size="lg" textAlign="center" mb={2}>
                {user.name}
            </Heading>
            <Text fontSize="sm" color="gray.500" textAlign="center" mb={4}>
                {user.email}
            </Text>

            {/* Informasi Tambahan */}
            <Stack spacing={4}>
                <Box>
                    <Text fontWeight="bold">Tanggal Lahir:</Text>
                    <Text>{user.dob || "Belum diatur"}</Text>
                </Box>
                <Box>
                    <Text fontWeight="bold">Nomor Telepon:</Text>
                    <Text>{user.phone || "Belum diatur"}</Text>
                </Box>
                <Box>
                    <Text fontWeight="bold">Hobi:</Text>
                    <Text>{user.hobby || "Belum diatur"}</Text>
                </Box>
                <Box>
                    <Text fontWeight="bold">Dibuat Pada:</Text>
                    <Text>{new Date(user.created_at).toLocaleDateString()}</Text>
                </Box>
            </Stack>

            {/* Tombol Logout */}
            <Button
                mt={6}
                w="100%"
                colorScheme="red"
                isLoading={isLoggingOut}
                onClick={HandleLogout}
            >
                Logout
            </Button>
        </Box>
        </Layout>
    );
}
